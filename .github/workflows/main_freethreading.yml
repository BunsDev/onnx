# Copyright (c) ONNX Project Contributors
#
# SPDX-License-Identifier: Apache-2.0

name: CI freethreading experimental

# Note: actions/setup-python does not support 3.13t therefore 
# Quansight-Labs/setup-python@v5 is used

on:
  schedule:
    - cron: '0 0 * * *'  # every day at midnight for reporting code coverage to codecov
  push:
    branches:
      - main
  pull_request:
  merge_group:
  workflow_dispatch:

permissions:  # set top-level default permissions as security best practice
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name == 'workflow_dispatch' }}
  cancel-in-progress: true

jobs:
  test:
    name: Test ${{ matrix.os }}, ${{ matrix.python_version }}, ${{ matrix.protobuf_type }}, debug=${{ matrix.debug_build }}, onnx_ml=${{ matrix.onnx_ml }}, doc=${{ matrix.documentation }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, macos-latest] # windows-latest not working yet
        python_version: ['3.13t']
        include:
          - python_version: '3.13t'
            onnx_ml: 1
            debug_build: 0
            documentation: 0
            os: 'ubuntu-24.04'
            protobuf_type: 'Internal'
          - python_version: '3.13t'
            onnx_ml: 1
            debug_build: 0
            documentation: 0
            os: 'macos-latest'
            protobuf_type: 'Internal'
          - python_version: '3.13t'
            onnx_ml: 1
            debug_build: 0
            documentation: 0
            os: 'windows-latest'
            protobuf_type: 'External'  # Only for Windows


    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Set up Python      
        uses: Quansight-Labs/setup-python@v5
        # uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b
        with:
          python-version: ${{ matrix.python_version }}

      - name: Show versions
        run: |
          python --version
          cmake --version

      - name: Install external protobuf - Linux
        if: matrix.protobuf_type == 'External' && startsWith(matrix.os,'ubuntu')
        run: |
          sudo apt-get install libprotobuf-dev protobuf-compiler

      - name: Install external protobuf - MacOS
        if: matrix.protobuf_type == 'External' && matrix.os == 'macos-latest'
        run: |
          source workflow_scripts/protobuf/build_protobuf_unix_freethreading.sh 3 $(pwd)/protobuf/protobuf_install

      - name: Set up MSBuild
        if: matrix.os == 'windows-latest'
        uses: microsoft/setup-msbuild@6fb02220983dee41ce7ae257b6f4d8f9bf5ed4ce # v2.0.0
        with:
          msbuild-architecture: x64

      - name: Install external protobuf - Windows
        if: matrix.protobuf_type == 'External' && matrix.os == 'windows-latest'
        run: |
          workflow_scripts/protobuf/build_protobuf_win.ps1


      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements-dev_freethreading.txt
          python -m pip install protobuf==5.29.2
          git submodule update --init --recursive

      - name: Build and install ONNX - Linux
        if: startsWith(matrix.os,'ubuntu')
        run: |
          if [ "${{ matrix.protobuf_type }}" == "External" ]; then
            export CMAKE_ARGS="$CMAKE_ARGS -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DONNX_USE_PROTOBUF_SHARED_LIBS=ON"
          fi
          pip install -e ".[reference]" -v
        env:
          DEBUG: ${{ matrix.debug_build }}
          ONNX_ML: ${{ matrix.onnx_ml }}
          ONNX_BUILD_TESTS: 1
          CMAKE_ARGS: "-DONNX_WERROR=ON -DCMAKE_CXX_FLAGS='-fsanitize=undefined -fno-sanitize-recover=all '"

      - name: Build and install ONNX - MacOS
        if: matrix.os == 'macos-latest'
        run: |
          pip install -e ".[reference]" -v
        env:
          DEBUG: ${{ matrix.debug_build }}
          ONNX_ML: ${{ matrix.onnx_ml }}
          ONNX_BUILD_TESTS: 1
          CMAKE_ARGS: "-DONNX_WERROR=ON"

      - name: Build and install ONNX - Windows, setup.py build_ext
        if: matrix.os == 'windows-latest' 
        run: |
          python setup.py build_ext --inplace
          python setup.py install
        env:
          DEBUG: ${{ matrix.debug_build }}
          ONNX_ML: ${{ matrix.onnx_ml }}
          ONNX_BUILD_TESTS: 1
          CMAKE_ARGS: "-DONNX_WERROR=OFF -DONNX_USE_PROTOBUF_SHARED_LIBS=OFF -DONNX_USE_LITE_PROTO=ON"

      - name: Build and install ONNX - Windows, pip install -e .
        if: matrix.os == 'windows-latest' 
        run: |
          pip install -e . -v
        env:
          DEBUG: ${{ matrix.debug_build }}
          ONNX_ML: ${{ matrix.onnx_ml }}
          ONNX_BUILD_TESTS: 1
          CMAKE_ARGS: "-DONNX_WERROR=OFF -DONNX_USE_PROTOBUF_SHARED_LIBS=OFF -DONNX_USE_LITE_PROTO=ON"
